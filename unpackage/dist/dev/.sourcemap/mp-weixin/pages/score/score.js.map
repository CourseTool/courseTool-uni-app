{"version":3,"file":"score.js","sources":["pages/score/score.vue","pages/score/score.vue?type=page"],"sourcesContent":["<template>\r\n    <view class=\"container\">\r\n        <view class=\"score\">\r\n            <!-- 标题 -->\r\n            <text class=\"title\">成绩查询</text>\r\n\r\n            <!-- 输入框 -->\r\n            <view class=\"input-group\">\r\n                <input v-model=\"username\" placeholder=\"请输入学号\" type=\"text\" class=\"input\" />\r\n                <input v-model=\"password\" placeholder=\"请输入密码\" type=\"password\" class=\"input\" />\r\n            </view>\r\n\r\n            <!-- 查询按钮 -->\r\n            <div @click=\"getScore\" class=\"post\">\r\n                <p>查询</p>\r\n            </div>\r\n\r\n            <!-- 成绩展示区域 -->\r\n            <view v-if=\"Object.keys(groupedScores).length > 0\" class=\"result\">\r\n                <view v-for=\"(scores, startDate) in groupedScores\" :key=\"startDate\" class=\"score-group\">\r\n                    <text class=\"group-title\">开课日期: {{ startDate }}</text>\r\n                    <view class=\"score-list\">\r\n                        <!-- 每行两列展示成绩 -->\r\n                        <view v-for=\"(score, index) in scores\" :key=\"index\" class=\"score-item\" :style=\"getScoreStyle(score)\">\r\n                            <text class=\"course-name\">课程名称: {{ score.name }}</text>\r\n                            <text class=\"score-value\">成绩: {{ score.score }}</text>\r\n                        </view>\r\n                    </view>\r\n                </view>\r\n            </view>\r\n\r\n            <!-- 若没有查询到成绩 -->\r\n            <view v-else>\r\n                <text v-if=\"Object.keys(groupedScores).length === 0\" class=\"no-result\">暂无成绩数据</text>\r\n            </view>\r\n        </view>\r\n    </view>\r\n</template>\r\n\r\n<script setup>\r\nimport { ref, onMounted } from \"vue\";\r\n\r\nconst username = ref(\"\");\r\nconst password = ref(\"\");\r\nconst scoreList = ref([]); // 用于保存成绩数据\r\nconst groupedScores = ref({}); // 用于存放分组后的成绩数据\r\n\r\n// 按照开课日期分组成绩\r\nfunction groupScoresByStartDate(scores) {\r\n    const groups = {};\r\n    scores.forEach(score => {\r\n        const startDate = score.startDate; // 假设 \"开课日期\" 字段存在并且是字符串类型\r\n        if (!groups[startDate]) {\r\n            groups[startDate] = [];\r\n        }\r\n        groups[startDate].push(score);\r\n    });\r\n    scores = scores.sort((a, b) => a.score - b.score);\r\n    return groups;\r\n}\r\n\r\n// 根据成绩值设置背景颜色\r\nfunction getScoreStyle(score) {\r\n    const grade = parseFloat(score.score);\r\n    if (grade >= 90) {\r\n        return { backgroundColor: \"#d4edda\", color: \"#28a745\" }; // 绿色\r\n    } else if (grade < 60) {\r\n        return { backgroundColor: \"#f8d7da\", color: \"#dc3545\" }; // 红色\r\n    } else {\r\n        return { backgroundColor: \"#fff3cd\", color: \"#ffc107\" }; // 黄色\r\n    }\r\n}\r\n\r\nfunction getScore() {\r\n    if (username.value === \"\" || password.value === \"\") {\r\n        uni.showToast({\r\n            title: \"请输入学号和密码\",\r\n            icon: \"none\",\r\n        });\r\n        return;\r\n    }\r\n    uni.showToast({\r\n        title: \"查询中...\",\r\n        icon: \"loading\",\r\n        mask: true, // 防止用户点击屏幕,\r\n        duration: 10000,\r\n    });\r\n\r\n    uni.request({\r\n        url: \"https://www.course.pink:5000/user/score\", // 假设这个是正确的 API 地址\r\n        data: {\r\n            username: username.value,\r\n            password: password.value,\r\n        },\r\n        success(res) {\r\n            const data = res.data.data; // 获取成绩数据\r\n            scoreList.value = data; // 更新成绩数据\r\n            groupedScores.value = groupScoresByStartDate(data); // 根据开课日期分组\r\n            uni.setStorageSync(\"scoreList\", groupedScores.value);\r\n            uni.hideToast(); // 隐藏查询中的动画\r\n            uni.showToast({\r\n                title: \"查询成功\",\r\n                icon: \"success\",\r\n            });\r\n        },\r\n        fail() {\r\n            uni.hideToast();\r\n            uni.showToast({\r\n                title: \"请求失败，请重试\",\r\n                icon: \"none\",\r\n            });\r\n        },\r\n    });\r\n}\r\nonMounted(() => {\r\n    if (uni.getStorageSync(\"scoreList\")) {\r\n        groupedScores.value = uni.getStorageSync(\"scoreList\");\r\n    }\r\n});\r\n</script>\r\n\r\n<style lang=\"scss\">\r\n/* 页面容器 */\r\n.container {\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    background-color: #f7f7f7;\r\n}\r\n\r\n/* 成绩查询区域 */\r\n.score {\r\n    width: 95%;\r\n    background-color: white;\r\n    padding: 20px;\r\n    border-radius: 15px;\r\n    box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);\r\n    text-align: center;\r\n}\r\n\r\n/* 标题 */\r\n.title {\r\n    font-size: 32rpx;\r\n    font-weight: bold;\r\n    margin-bottom: 30rpx;\r\n    color: #333;\r\n}\r\n\r\n/* 输入框 */\r\n.input-group {\r\n    display: flex;\r\n    flex-direction: column;\r\n    gap: 20rpx;\r\n    align-items: center;\r\n    margin: 20rpx 0;\r\n}\r\n\r\n/* 输入框样式 */\r\n.input {\r\n    width: 600rpx;\r\n    padding: 12rpx;\r\n    border: 1px solid #ccc;\r\n    border-radius: 8rpx;\r\n    font-size: 28rpx;\r\n    color: #333;\r\n    background-color: #fafafa;\r\n    text-align: center;\r\n}\r\n\r\n/* 输入框聚焦时的样式 */\r\n.input:focus {\r\n    border-color: #4caf50;\r\n}\r\n\r\n/* 查询按钮 */\r\n.post {\r\n    width: 650rpx;\r\n    padding: 15rpx 0;\r\n    background-color: #4caf50;\r\n    color: white;\r\n    font-size: 30rpx;\r\n    border-radius: 8rpx;\r\n    cursor: pointer;\r\n    box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);\r\n    margin: 0 auto;\r\n}\r\n\r\n/* 按钮悬停时的效果 */\r\n.post:hover {\r\n    background-color: #45a049;\r\n}\r\n\r\n/* 查询结果部分 */\r\n.result {\r\n    margin-top: 30rpx;\r\n    text-align: left;\r\n    padding: 10rpx;\r\n}\r\n\r\n/* 查询结果标题 */\r\n.result-title {\r\n    font-size: 28rpx;\r\n    font-weight: bold;\r\n    color: #333;\r\n    margin-bottom: 15rpx;\r\n}\r\n\r\n/* 成绩项样式 */\r\n.score-group {\r\n\tmargin: 20rpx 0;\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: flex-start;\r\n    flex-direction: column;\r\n}\r\n\r\n.group-title {\r\n    font-size: 28rpx;\r\n    font-weight: bold;\r\n    color: #333;\r\n    margin-bottom: 10rpx;\r\n}\r\n\r\n.score-list {\r\n    display: flex;\r\n    flex-wrap: wrap; /* 使成绩项能够换行 */\r\n    gap: 20rpx;\r\n    justify-content: center;\r\n}\n.score-list .score-item:last-child:nth-child(odd){\n\tmargin-right:50%;\n}\r\n\r\n/* 每个成绩项的样式 */\r\n.score-item {\r\n    width: 43%; /* 每行两列展示 */\r\n    padding: 10rpx;\r\n    border-radius: 8rpx;\r\n    box-shadow: 0 2px 5px rgba(0, 0, 0, 0.1);\r\n    margin-bottom: 15rpx;\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: flex-start;\r\n}\r\n\r\n/* 课程名称和成绩 */\r\n.score-item > text {\r\n    display: block;\r\n    font-size: 32rpx;\r\n    margin-bottom: 8rpx;\r\n}\r\n\r\n/* 无结果提示 */\r\n.no-result {\r\n    color: #999;\r\n    font-size: 28rpx;\r\n}\r\n</style>\r\n","import MiniProgramPage from '/Users/zhangrui/Library/Mobile Documents/com~apple~CloudDocs/Desktop/桌面/WeChatApp/course-wechat/pages/score/score.vue'\nwx.createPage(MiniProgramPage)"],"names":["ref","uni","onMounted","MiniProgramPage"],"mappings":";;;;;AA0CA,UAAM,WAAWA,cAAAA,IAAI,EAAE;AACvB,UAAM,WAAWA,cAAAA,IAAI,EAAE;AACvB,UAAM,YAAYA,cAAAA,IAAI,CAAA,CAAE;AACxB,UAAM,gBAAgBA,cAAAA,IAAI,CAAA,CAAE;AAG5B,aAAS,uBAAuB,QAAQ;AACpC,YAAM,SAAS,CAAA;AACf,aAAO,QAAQ,WAAS;AACpB,cAAM,YAAY,MAAM;AACxB,YAAI,CAAC,OAAO,SAAS,GAAG;AACpB,iBAAO,SAAS,IAAI;QACvB;AACD,eAAO,SAAS,EAAE,KAAK,KAAK;AAAA,MACpC,CAAK;AACD,eAAS,OAAO,KAAK,CAAC,GAAG,MAAM,EAAE,QAAQ,EAAE,KAAK;AAChD,aAAO;AAAA,IACX;AAGA,aAAS,cAAc,OAAO;AAC1B,YAAM,QAAQ,WAAW,MAAM,KAAK;AACpC,UAAI,SAAS,IAAI;AACb,eAAO,EAAE,iBAAiB,WAAW,OAAO,UAAS;AAAA,MAC7D,WAAe,QAAQ,IAAI;AACnB,eAAO,EAAE,iBAAiB,WAAW,OAAO,UAAS;AAAA,MAC7D,OAAW;AACH,eAAO,EAAE,iBAAiB,WAAW,OAAO,UAAS;AAAA,MACxD;AAAA,IACL;AAEA,aAAS,WAAW;AAChB,UAAI,SAAS,UAAU,MAAM,SAAS,UAAU,IAAI;AAChDC,sBAAAA,MAAI,UAAU;AAAA,UACV,OAAO;AAAA,UACP,MAAM;AAAA,QAClB,CAAS;AACD;AAAA,MACH;AACDA,oBAAAA,MAAI,UAAU;AAAA,QACV,OAAO;AAAA,QACP,MAAM;AAAA,QACN,MAAM;AAAA;AAAA,QACN,UAAU;AAAA,MAClB,CAAK;AAEDA,oBAAAA,MAAI,QAAQ;AAAA,QACR,KAAK;AAAA;AAAA,QACL,MAAM;AAAA,UACF,UAAU,SAAS;AAAA,UACnB,UAAU,SAAS;AAAA,QACtB;AAAA,QACD,QAAQ,KAAK;AACT,gBAAM,OAAO,IAAI,KAAK;AACtB,oBAAU,QAAQ;AAClB,wBAAc,QAAQ,uBAAuB,IAAI;AACjDA,wBAAAA,MAAI,eAAe,aAAa,cAAc,KAAK;AACnDA,wBAAG,MAAC,UAAS;AACbA,wBAAAA,MAAI,UAAU;AAAA,YACV,OAAO;AAAA,YACP,MAAM;AAAA,UACtB,CAAa;AAAA,QACJ;AAAA,QACD,OAAO;AACHA,wBAAG,MAAC,UAAS;AACbA,wBAAAA,MAAI,UAAU;AAAA,YACV,OAAO;AAAA,YACP,MAAM;AAAA,UACtB,CAAa;AAAA,QACJ;AAAA,MACT,CAAK;AAAA,IACL;AACAC,kBAAAA,UAAU,MAAM;AACZ,UAAID,cAAG,MAAC,eAAe,WAAW,GAAG;AACjC,sBAAc,QAAQA,cAAAA,MAAI,eAAe,WAAW;AAAA,MACvD;AAAA,IACL,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACrHD,GAAG,WAAWE,SAAe;"}